# in the long run this base class should be refactored based on feedback from
# other diffraction methods to arrive maybe at an NXem_crystal_structure_model_ebsd_parsed.yaml
category: base
doc: |
  Crystal structure phase models used for indexing Kikuchi pattern.
  
  This base class contains key metadata relevant to every physical
  kinematic or dynamic diffraction model which is used for simulating
  Kikuchi diffraction pattern.
  The actual indexing of Kikuchi patterns may use different algorithms.
  Such are used within different workflows where simulated and measured
  Kikuchi pattern are compared to rate which phase and orientation is the most
  likely candidate describing the pattern measured at that each scan point
  respectively. If this evaluation yields scan points without any solutions,
  these are represented using the null-phase model phase0, aka n/a aka notIndexed.
  
  Traditionally, Hough transformation-based indexing has been the most frequently
  used algorithm. Dictionary-based alternatives are emerging.
symbols:
  n_hkl: |
    Number of reflectors (Miller crystallographic plane triplets).
  n_pos: |
    Number of atom positions.
type: group
NXem_ebsd_crystal_structure_model(NXobject):
  # for EBSD specifically we need to know the assumed crystal structure
  # with assumed statistically distributed atoms, i.e. structure and atom
  # positions
  crystallographic_database_identifier:
    doc: |
      Identifier of an entry resolvable via crystallographic_database
      which was used for creating this structure model.
  crystallographic_database:
    doc: |
      Name of the crystallographic database to resolve
      crystallographic_database_identifier e.g. COD, ICSD, or others.
  
  # defined using which convention?
  unit_cell_abc(R+):
    unit: NX_LENGTH
    doc: |
      Crystallography unit cell parameters a, b, and c.
    dim: (3,)
  # defined using which convention?
  unit_cell_alphabetagamma(R+):
    unit: NX_ANGLE
    doc: |
      Crystallography unit cell parameters alpha, beta, and gamma.
    dim: (3,)
  unit_cell_volume(R+):
    unit: NX_VOLUME
    doc: |
      Volume of the unit cell
  space_group:
    doc: |
      Crystallographic space group  
  # add enumeration of all possible
  is_centrosymmetric(NX_BOOLEAN):
    doc: |
      True if space group is considered a centrosymmetric one.
      False if space group is considered a non-centrosymmetric one.
      Centrosymmetric has all types and combinations of symmetry elements
      (translation, rotational axis, mirror planes, center of inversion)
      Non-centrosymmetric compared to centrosymmetric is constrained (no inversion).
      Chiral compared to non-centrosymmetric is constrained (no mirror planes).
  is_chiral(NX_BOOLEAN):
    doc: |
      True if space group is considered a chiral one.
      False if space group is consider a non-chiral one.
  laue_group:
    doc: |
      Laue group
  # add enumeration of all possible
  point_group:
    doc: |
      Point group using International Notation.
  # add enumeration all possible
  unit_cell_class:
    doc: |
      Crystal system
    enumeration: [triclinic, monoclinic, orthorhombic, tetragonal, rhombohedral, hexagonal, cubic]
  phase_identifier(N0):
    unit: NX_UNITLESS
    doc: |
      Identifier for each phase. The value 0 is reserved for the unknown phase
      which represents the null-model that no phase model was sufficiently
      significantly confirmed, i.e. the phase_name is n/a or notIndexed.
      
      The phase identifier value has to match with the integer postfix of the
      group name which represents that instance in a NeXus/HDF5 file, i.e.
      if two phases were used e.g. 0 and 1, two instances of an
      NXem_ebsd_crystal_structure_model named phase0 and phase1
      should be stored in the HDF5 file.
  phase_name:
    doc: |
      Name of the phase/alias.
      In the case that the NXem_ebsd_crystal_structure_model base class is
      used with analyzed orientation maps (e.g. NXms_ipf instances or alike)
      this field may have the value **n/a** or equivalently **notIndexed**
      thereby reporting the null-model the unknown phase.
  atom_identifier:
    doc: |
      Labels for each atom position
    dim: (n_pos,)
  atom(N0):
    unit: NX_UNITLESS
    doc: |
      The hash value :math:`H` is :math:`H = Z + N*256` with :math:`Z`
      the number of protons and :math:`N` the number of neutrons
      of each isotope respectively. Z and N have to be 8-bit unsigned integers.
      For the rationale behind this `M. KÃ¼hbach et al. (2021) <https://doi.org/10.1017/S1431927621012241>`_
    dim: (n_pos,)
  atom_positions(R):
    unit: NX_LENGTH
    doc: |
      Atom positions x, y, z.
    dim: (n_pos, 3)
  depends_on:
    doc: |
      Reference to an instance of NXcoordinate_system
      whereby the positions can be resolved.
  # in addition we need to have a physical model e.g. kinematic or dynamical e-diffraction theory
  # to describe the simulated Kikuchi pattern generated from such a model
  atom_occupancy(R+0):
    unit: NX_DIMENSIONLESS
    doc: |
      Relative occupancy of the atom position.
    dim: (n_pos,)
  number_of_planes(N):
    unit: NX_UNITLESS
    doc: |
      How many reflectors are distinguished. Value has to
      match value for symbol n_hkl.
  # Miller indices :math:`(hkl)[uvw]`.
  plane_miller(R):
    unit: NX_UNITLESS
    doc: |
      Miller indices :math:`(hkl)`.
    dim: (n_hkl, 3)
  dspacing(R+0):
    unit: NX_LENGTH
    doc: |
      D-spacing.
    dim: (n_hkl,)
  relative_intensity(R+0):
    unit: NX_DIMENSIONLESS
    doc: |
      Relative intensity of the signal for the plane.
    dim: (n_hkl,)
  number_of_scan_points(N0):
    unit: NX_UNITLESS
    doc: |
      In case the NXem_ebsd_crystal_structure_model base class is used
      with analyzed orientation maps this field stores how many scan points
      of the map were identified as that phase.
  (NXms_ipf):