category: base
doc: |
  Base class documenting the results of a tool from the paraprobe-toolbox.
  
  The paraprobe-toolbox is a collection of open-source tools for performing
  efficient analyses of point cloud data where each point can represent atoms or
  (molecular) ions. A key application of the toolbox has been for research in the
  field of Atom Probe Tomography (APT) and related Field Ion Microscopy (FIM):
  
  * `paraprobe-toolbox <https://www.gitlab.com/paraprobe/paraprobe-toolbox>`_
  * `M. KÃ¼hbach et al. <https://paraprobe-toolbox.readthedocs.io/en/main/>`_
  
  The toolbox does not replace but complements existent software tools in this
  research field. Given its capabilities of handling points as objects with
  properties and enabling analyses of the spatial arrangement of and inter-
  sections between geometric primitives, the software can equally be used
  for analyzing data in materials science and materials engineering.
  
  The configuration and results of a run of a tool from the toolbox is documented
  using binary container formats. Currently, paraprobe-toolbox uses the Hierarchical
  Data Format 5 (HDF5) for this purpose.
symbols:
  doc: |
    The symbols used in the schema to specify e.g. dimensions of arrays.
type: group
NXapm_paraprobe_tool_results(NXprocess):
  (NXidentifier):
  analysis_identifier(NX_UINT):
    doc: |
      Internal identifier by the tool.
    unit: NX_UNITLESS
  (NXprogram):
  performance(NXcs_profiling):
  description(NX_CHAR):
    doc: |
      Possibility for leaving a free-text description about this analysis.
  start_time(NX_DATE_TIME):
    doc: |
      ISO 8601 formatted time code with local time zone offset to UTC
      information included when the analysis behind this results file was
      started, i.e. the respective executable of the tool started as a process.
  end_time(NX_DATE_TIME):
    doc: |
      ISO 8601 formatted time code with local time zone offset to UTC
      information included when the analysis behind this results file
      were completed and the respective process of the tool executable
      exited.
  config(NXserialized):
    doc: |
      The configuration that was used to parameterize the algorithms
      which the tool executes.
  results_path(NX_CHAR):
    doc: |
      Path to where the tool should store tool-specific results.
      If not specified results will be stored in the current working directory.
  status(NX_CHAR):
    doc: |
      A statement whether the tool executable managed to process the
      analysis or failed prematurely.
      
      This status is written to the results file after the end_time
      at which point the executable must not compute any further analysis
      results before exiting as a process.
      
      Only when this status message is present and shows `success`, the
      user should consider the results. In all other cases it might be that
      the executable has terminated prematurely or another error occurred.
    enumeration: [success, failure]
  (NXuser):
  (NXcoordinate_system_set):
    doc: |
      Details about coordinate systems used. In atom probe several coordinate
      systems have to be distinguished. Names of instances of :ref:`NXcoordinate_system`
      are picked from the following controlled set of names:
      
      * paraprobe
      * lab
      * specimen
      * laser
      * instrument
      * detector
      * recon
      
      The aim of this convention is to support users with contextualizing what and
      which reference frame each instance (coordinate system) is. If need instances of
      :ref:`NXtranslation` are used to transform between different reference frames.
    (NXcoordinate_system):
    # add further fields coming from using the charge state recovery
    # workflow from the ifes_apt_tc_data_modeling library
    ##MK::end of the tool-specific section
