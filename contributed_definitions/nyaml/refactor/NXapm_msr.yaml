category: base
doc: |
  Base class for collecting a session with a real atom probe or field-ion microscope.
  
  Ideally, we would like to describe the workflow of experiments and simulations of atom probe and
  field-evaporation simulation research in more detail and contextualize better descriptions of
  experiments and computer simulations.
  
  The main motivation for this is the ongoing development and tighter becoming connection between atom probe
  and other material characterization techniques like electron microscopy as it is documented in the literature in practice
  by `T. Kelly et al. <https://doi.org/10.1017/S1431927620022205>`_, `C. Fleischmann et al. <https://doi.org/10.1016/j.ultramic.2018.08.010>`_,
  and theory by `W. Windl et al. <https://doi.org/10.1093/micmic/ozad067.294>`_ or `C. Freysoldt et al. https://doi.org/10.1103/PhysRevLett.124.176801>`_
  to mention but a few. To arrive at a design of base classes and an application definition which can be used
  for both real and simulated atom probe experiments it is worthwhile to recall first several different concepts
  that are related to events and (molecular) ions. The reason is that it is current research practice within that research field
  that exploratory research workflows focus on obtaining material-structure-material-property correlations:
  
  * Pulsing events which are used to trigger ion extraction events.
  * Physical events and corresponding signal triggered by an ion hitting the detector.
    These events are not necessarily caused directly correlated with an identifiable pulsing event.
  * Processed ion hits which are the result of an algorithm that took the physical and pulsing events as input
    and qualifies some of these events as to be of sufficiently high quality to substantiate that they
    indicate that a (molecular) ion is wortwhile to be considered further and eventually included in the reconstructed volume.
  * Calibration and signal filtering steps applied to these processed ion hits as input which results in actually
    selected (molecular) ions based on which an instance of a reconstruction is created.
  * Correlation of these ions with a statistics and theoretical model of mass-to-charge-state ratio values
    and charge states of these to substantiate that some of these ions are can be considered as rangable
    and thus an iontype can be associated by running again peak finding algorithms and labeling i.e. ranging
    algorithms.
  
  Not only in AMETEK/Cameca's IVAS/APSuite software, which the majority of atom probers use, these concepts are
  well distinguished. However, the algorithms used to transform correlations between pulses and physical events into
  actual events i.e. detector hits ions is a proprietary one. Due to this practical inaccessibility of details,
  virtually all atom probe studies currently use a reporting scheme where the course of the specimen evaporation
  is documented where quantities are a function of evaporation identifier i.e. actual event/ion, i.e. after having the
  hits finding algorithm and correlations applied. That is the evaporation_identifier take the role of an implicit
  time and course of the experiment.
  
  There is a number of groups who build own instruments and share different aspects of their technical specifications
  and approaches they use for data processing. Despite some of these activities have embraced open source practices
  and reporting schemes, they all use essentially the same workflow that has been proposed by AMETEK/Cameca and its
  forerunner company Imago which is graphical user interface based analysis of atom probe data. Specifically,
  software is used to correlate and interpret pulsing and physical events into processed ion hits. Some of these
  after having calibrations and corrections applied are reported as (molecular) ions with ranged iontypes to yield a dataset
  based on which scientific conclusions about the characterized material volume can be made.
  
  By contrast, simulations of field-evaporation have the luxury to document the flight path and allow following the
  whereabouts of each ion evaporated if needed. This level of detail is currently not characterizable in experiment
  and thus there is an artificial divide between schemas describing simulations of atom probe vs measurements of atom probe.
  We argue that this divide can be bridged with realizing the above-mentioned context and the realization that similar concepts
  are used in both worlds with many not only being similar but exactly the same.
  
  A further argument to support this view is that computer simulations of atom probe usually are compared to reconstructed
  datasets, either to the input configuration that served as the virtual specimen or to a real world atom probe experiment and its
  reconstructions. In both cases, the recorded simulated physical events of simulated ions hitting a simulated detector
  is not the end of the research workflow but typically just the input to apply addition algorithms such as (spatial) filtering
  and reconstruction algorithms. Only the practical need for making ranging definitions is (at least as of now) not as much needed
  in field-evaporation simulations than it is in real world measurements because each ion has a prescribed iontype in the simulation.
  Be it a specifically charged nuclid or a molecular ion whose flight path the simulation resolves.
  However, the simpler ranging of simulations is we have to consider that this is only because currently many of the
  indeed multi-scale (time and space) aspects of the challenge that is the simulating of field-evaporation are simplified
  because of demand in computing resources or knowledge gaps in how to deal with these complexities. Molecular ion dissociation
  upon flight is one such. Also the complexity of simulation setups is simpler such as assuming a straight flight path, ignoring details
  such as local electrodes or physical obstacles and electric fields (controlled or stray fields) which however do have an effect
  on an ion's flight path in a measurement.
  
  To conclude, we thus propose two base classes :ref:`NXapm_msr` and :ref:`NXapm_sim` where the second
  one may in the future turn out to become obsolete as people realize that a simulated atom probe is maybe
  equivalent in design and function to a real atom probe that is just imagined to be stripped of many components.
# noteworthy the situation is similar to electron microscopy especially transmission electron microscopy where factually
# interpretation without simulations is pointless. The only difference is that in electron microscopy there is a large availability
# of documentation and open-source tools for performing such simulations.
type: group
NXapm_msr(NXobject):  # when evolving these ideas further inherit from NXapm_method instead
  instrument(NXinstrument):
    doc: |
        Metadata of the atom probe or field-ion microscope instrument, henceforth called
        microscope or instrument, and the lab in which it stands.
    (NXcsg):
      doc: |
        Possibility to include a detailed computational geometry description of the instrument.
    instrument_name(NX_CHAR):
      doc: |
          Given name of the microscope as defined by the hosting lab. This is an alias.
          Examples could be LEAP6000, Raptor, Oxcart, one atom at a time, etc.
    location(NX_CHAR):
      doc: |
        Location of the lab or place where the instrument is installed.
        Using GEOREF is preferred.
    (NXfabrication):
    (NXreflectron):
    # decelerate_electrode(NXlens_em):
    # counter_electrodes being optional WO2016171675A1
    # see https://en.wikipedia.org/wiki/Einzel_lens for details double einzel lens in the invizo 6000
    # according to A. Breen (UNSW)
    local_electrode(NXlens_em):
      doc: |
        A local electrode guiding the ion flight path.
        Also called counter or extraction electrode.
    # but the local_electrode does not really on purpose create a magnetic field,
    # specific for an electro-magnetic lens is the symmetry of its field
    # NEW ISSUE: for now keep that we have what is an NXlens_em
    # NEW ISSUE: APEX MONITOR / LEAP distance monitoring
    # NEW ISSUE: the definition of flat test data should be included and documented
    # NEW ISSUE: local electrode, baking strategies, storage
    ion_detector(NXdetector):
      doc: |
          Detector for taking raw time-of-flight and ion/hit impact positions data.
    pulser(NXpulser_apm):
    stage_lab(NXstage_lab):
    # evaporation control in which context is it used?
    # NEW ISSUE: begin add and support I/O of further details
    # NEW ISSUE: with Shyam Katnagallu fix that so far the application definition does not really cover fim
    # as there is no place to store values for a gas injection system and a (partial) pressure sensor for the
    # imaging gas it should be clarified in the docstring of the pressure field if this measured either a chamber total of a species partial pressure
    # NEW ISSUE: add NXapm_energy_analyzer, a voltage grid like done in Rouen/GPM
    analysis_chamber(NXchamber):
    buffer_chamber(NXchamber):
    load_lock_chamber(NXchamber):
    getter_pump(NXpump):
    roughening_pump(NXpump):
    turbomolecular_pump(NXpump):
    status(NX_CHAR):
      doc: |
        A statement whether the measurement was successful or failed prematurely.
      enumeration: [success, failure, unknown]
    (NXevent_data_apm_set):
#    (NXevent_data_apm):
