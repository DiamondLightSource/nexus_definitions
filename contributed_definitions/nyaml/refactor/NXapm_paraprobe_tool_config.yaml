category: base
doc: |
  Base class documenting the configuration of a tool from the paraprobe-toolbox.
  
  The paraprobe-toolbox is a collection of open-source tools for performing
  efficient analyses of point cloud data where each point can represent atoms or
  (molecular) ions. A key application of the toolbox has been for research in the
  field of Atom Probe Tomography (APT) and related Field Ion Microscopy (FIM):
  
  * `paraprobe-toolbox <https://www.gitlab.com/paraprobe/paraprobe-toolbox>`_
  * `M. KÃ¼hbach et al. <https://paraprobe-toolbox.readthedocs.io/en/main/>`_
  
  The toolbox does not replace but complements existent software tools in this
  research field. Given its capabilities of handling points as objects with
  properties and enabling analyses of the spatial arrangement of and inter-
  sections between geometric primitives, the software can equally be used
  for analyzing data in materials science and materials engineering.
  
  The configuration and results of a run of a tool from the toolbox is documented
  using binary container formats. Currently, paraprobe-toolbox uses the Hierarchical
  Data Format 5 (HDF5) for this purpose.
# container formats typically use graphs - trees to be more specific - to organize
# metadata and data. Information is granularized via labelled property graphs.
symbols:
  doc: |
    The symbols used in the schema to specify e.g. dimensions of arrays.
type: group
NXapm_paraprobe_tool_config(NXprocess):
  # sequence_id is inherited from NXprocess
  (NXidentifier):
  analysis_identifier(NX_UINT):
    doc: |
      Internal identifier by the tool.
    unit: NX_UNITLESS
  description(NX_CHAR):
    doc: |
      Possibility for leaving a free-text description about this analysis.
  results_path(NX_CHAR):
    doc: |
      Path to where the tool should store tool-specific results.
      If not specified results will be stored in the current working directory.
  time_stamp(NX_DATE_TIME):
    doc: |
      ISO 8601 formatted time code with local time zone offset to UTC
      information included when this configuration file was created.
  reconstruction(NXserialized):
    doc: |
      Specification of the tomographic reconstruction to use for this analysis.
      
      Typically, reconstructions in the field of atom probe tomography are communicated
      via files which store reconstructed ion positions and mass-to-charge-state-ratio values.
      Container files like HDF5 though can store multiple reconstructions.
      Position and mass_to_charge point to specific instances to use for this analysis.
    position(NX_CHAR):
      doc: |
        Name of the node which resolves the reconstructed ion position
        values to use for this analysis.
    mass_to_charge(NX_CHAR):
      doc: |
        Name of the node which resolves the mass-to-charge-state-ratio
        values to use for this analysis.
  iontypes(NXserialized):
    doc: |
      Specification of the ranging definitions to use for this analysis.
      
      Ranging is the process of labeling time-of-flight data with so-called iontypes.
      Iontypes ideally specify the most likely (molecular) ion that is assumed of having
      been evaporated and laying within a mass-to-charge-state-ratio value interval.
      
      The so-called UNKNOWNTYPE iontype represents the null model of an event/ion
      that has not been ranged. The identifier of this special iontype is always 0.
    ranging_definitions(NX_CHAR):
      doc: |
        Name of the (parent) node directly below which (in the hierarchy)
        the ranging definition for (molecular) ions are stored.
  performance(NXcs_profiling):
