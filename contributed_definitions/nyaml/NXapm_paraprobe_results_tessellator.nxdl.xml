<?xml version="1.0" ?>
<?xml-stylesheet type="text/xsl" href="nxdlformat.xsl"?>
<definition category="application" extends="NXobject" name="NXapm_paraprobe_results_tessellator" type="group" xmlns="http://definition.nexusformat.org/nxdl/3.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://definition.nexusformat.org/nxdl/3.1 ../nxdl.xsd">
    <symbols>
        <doc>
             The symbols used in the schema to specify e.g. dimensions of arrays.
        </doc>
        <symbol name="n_ions">
            <doc>
                 The total number of ions in the reconstruction.
            </doc>
        </symbol>
        <symbol name="n_f_xdmf">
            <doc>
                 The total number of facets/polygons defining the tessellation.
            </doc>
        </symbol>
    </symbols>
    <doc>
         Results of a paraprobe-tessellator tool run.
    </doc>
    <group maxOccurs="1" minOccurs="1" type="NXentry">
        <attribute name="version">
            <doc>
                 Version specifier of this application definition.
            </doc>
        </attribute>
        <field name="definition" type="NX_CHAR">
            <doc>
                 Official NeXus NXDL schema with which this file was written.
            </doc>
            <enumeration>
                <item value="NXapm_paraprobe_results_tessellator"/>
            </enumeration>
        </field>
        <field name="program" type="NX_CHAR">
            <doc>
                 Given name of the program/software/tool with which this NeXus
                 (configuration) file was generated.
            </doc>
            <attribute name="version" type="NX_CHAR">
                <doc>
                     Ideally program version plus build number, or commit hash or description
                     of ever persistent resources where the source code of the program and
                     build instructions can be found so that the program can be configured
                     ideally in such a manner that the result of this computational process
                     is recreatable in the same deterministic manner.
                </doc>
            </attribute>
        </field>
        <field name="analysis_identifier" optional="true" type="NX_CHAR">
            <doc>
                 Ideally, a (globally persistent) unique identifier for referring
                 to this analysis.
            </doc>
        </field>
        <field name="analysis_description" optional="true" type="NX_CHAR">
            <doc>
                 Possibility for leaving a free-text description about this analysis.
            </doc>
        </field>
        <field name="start_time" type="NX_DATE_TIME">
            <doc>
                 ISO 8601 formatted time code with local time zone offset to UTC
                 information included when the analysis behind this results file
                 was started, i.e. the paraprobe-tool executable started as a process.
            </doc>
        </field>
        <field name="end_time" type="NX_DATE_TIME">
            <doc>
                 ISO 8601 formatted time code with local time zone offset to UTC
                 information included when the analysis behind this results file
                 were completed and the paraprobe-tool executable exited as a process.
            </doc>
        </field>
        <field name="config_filename" type="NX_CHAR">
            <doc>
                 The absolute path and name of the config file for this analysis.
            </doc>
            <attribute name="version" type="NX_CHAR">
                <doc>
                     At least SHA256 strong hash of the specific config_file for
                     tracking provenance.
                </doc>
            </attribute>
        </field>
        <field name="results_path" optional="true" type="NX_CHAR">
            <doc>
                 Path to the directory where the tool should store NeXus/HDF5 results
                 of this analysis. If not specified results will be stored in the
                 current working directory.
            </doc>
        </field>
        <field name="status" type="NX_CHAR">
            <doc>
                 A statement whether the paraprobe-tool executable managed to
                 process the analysis or failed prematurely.
                 
                 This status is written to the results file after the end_time
                 at which point the executable must not compute any analysis.
                 Only when this status message is present and shows `success`, the
                 user should consider the results. In all other cases it might be
                 that the executable has terminated prematurely or another error
                 occurred.
            </doc>
            <enumeration>
                <item value="success"/>
                <item value="failure"/>
            </enumeration>
        </field>
        <group recommended="true" type="NXuser">
            <doc>
                 If used, contact information and eventually details
                 of at least the person who performed this analysis.
            </doc>
            <field name="name" type="NX_CHAR"/>
            <field name="affiliation" recommended="true" type="NX_CHAR"/>
            <field name="address" optional="true" type="NX_CHAR"/>
            <field name="email" recommended="true" type="NX_CHAR"/>
            <field name="orcid" recommended="true" type="NX_CHAR"/>
            <field name="orcid_platform" recommended="true" type="NX_CHAR"/>
            <field name="telephone_number" optional="true" type="NX_CHAR"/>
            <field name="role" recommended="true" type="NX_CHAR"/>
            <field name="social_media_name" optional="true" type="NX_CHAR"/>
            <field name="social_media_platform" optional="true" type="NX_CHAR"/>
        </group>
        <group type="NXcoordinate_system_set">
            <doc>
                 Details about the coordinate system conventions used.
            </doc>
            <group maxOccurs="unbounded" minOccurs="1" type="NXtransformations">
                <doc>
                     The individual coordinate systems which should be used.
                     Field names should be prefixed with the following controlled terms
                     indicating which individual coordinate system is described:
                     
                     * paraprobe
                     * lab
                     * specimen
                     * laser
                     * leap
                     * detector
                     * recon
                </doc>
            </group>
        </group>
        <group maxOccurs="1" minOccurs="0" type="NXprocess">
            <group name="voronoi_tessellation" type="NXprocess">
                <doc>
                     The tool can be used to compute a Voronoi tessellation the entire
                     or a sub-set of the reconstruction. The point cloud in the ROI is
                     wrapped into a tight axis-aligned bounding box. The tool detects if
                     Voronoi cells make contact with the walls of this bounding box.
                     The tessellation is computed without periodic boundary conditions.
                </doc>
                <group name="window" type="NXcs_filter_boolean_mask">
                    <doc>
                         A bitmask which identifies which of the ions in the dataset were
                         analyzed.
                    </doc>
                    <field name="number_of_ions" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Number of ions covered by the mask.
                             The mask value for most may be 0.
                        </doc>
                    </field>
                    <field name="bitdepth" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Number of bits assumed matching on a default datatype.
                             (e.g. 8 bits for a C-style uint8).
                        </doc>
                    </field>
                    <field name="mask" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             The unsigned integer array representing the content of the mask.
                             If padding is used the padded bits are set to 0. The mask is for
                             convenience always as large as the entire dataset as it will
                             be stored compressed anyway. The convenience feature with this
                             is that then the mask can be decoded with numpy and mirrored
                             against the evaporation_id array and one immediately can filter
                             out all points that were used by the paraprobe.
                             The length of the array adds to the next unsigned integer
                             if the number of ions in the dataset is not an integer
                             multiple of the bitdepth.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="n_ions"/>
                        </dimensions>
                    </field>
                </group>
                <group name="wall_contact_global" type="NXcs_filter_boolean_mask">
                    <doc>
                         A bitmask which identifies which of points have Voronoi cells that
                         are truncated by the global axis-aligned bounding box, i.e. boundaries
                         of the threads are ignored.
                    </doc>
                    <field name="number_of_points" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Number of points covered by the mask.
                             The mask value for most may be 0.
                        </doc>
                    </field>
                    <field name="bitdepth" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Number of bits assumed matching on a default datatype.
                             (e.g. 8 bits for a C-style uint8).
                        </doc>
                    </field>
                    <field name="mask" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             The unsigned integer array representing the content of the mask.
                             If padding is used the padded bits are set to 0. The mask is for
                             convenience always as large as the entire dataset as it will
                             be stored compressed anyway. The convenience feature with this
                             is that then the mask can be decoded with numpy and mirrored
                             against the evaporation_id array and one immediately can filter
                             out all points that were used by the paraprobe.
                             The length of the array adds to the next unsigned integer
                             if the number of ions in the dataset is not an integer
                             multiple of the bitdepth.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                </group>
                <group name="wall_contact_left" type="NXcs_filter_boolean_mask">
                    <doc>
                         A bitmask which identifies which of points have Voronoi cells that
                         are truncated by a specific wall of the axis-aligned bounding box.
                         The left wall has the negative x axis of the paraprobe coordinate
                         system as the outer unit normal.
                    </doc>
                    <field name="number_of_points" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Number of points covered by the mask.
                             The mask value for most may be 0.
                        </doc>
                    </field>
                    <field name="bitdepth" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Number of bits assumed matching on a default datatype.
                             (e.g. 8 bits for a C-style uint8).
                        </doc>
                    </field>
                    <field name="mask" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             The unsigned integer array representing the content of the mask.
                             If padding is used the padded bits are set to 0. The mask is for
                             convenience always as large as the entire dataset as it will
                             be stored compressed anyway. The convenience feature with this
                             is that then the mask can be decoded with numpy and mirrored
                             against the evaporation_id array and one immediately can filter
                             out all points that were used by the paraprobe.
                             The length of the array adds to the next unsigned integer
                             if the number of ions in the dataset is not an integer
                             multiple of the bitdepth.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                </group>
                <group name="wall_contact_right" type="NXcs_filter_boolean_mask">
                    <doc>
                         A bitmask which identifies which of points have Voronoi cells that
                         are truncated by a specific wall of the axis-aligned bounding box.
                         The right wall has the positive x axis of the paraprobe coordinate
                         system as the outer unit normal.
                    </doc>
                    <field name="number_of_points" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Number of points covered by the mask.
                             The mask value for most may be 0.
                        </doc>
                    </field>
                    <field name="bitdepth" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Number of bits assumed matching on a default datatype.
                             (e.g. 8 bits for a C-style uint8).
                        </doc>
                    </field>
                    <field name="mask" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             The unsigned integer array representing the content of the mask.
                             If padding is used the padded bits are set to 0. The mask is for
                             convenience always as large as the entire dataset as it will
                             be stored compressed anyway. The convenience feature with this
                             is that then the mask can be decoded with numpy and mirrored
                             against the evaporation_id array and one immediately can filter
                             out all points that were used by the paraprobe.
                             The length of the array adds to the next unsigned integer
                             if the number of ions in the dataset is not an integer
                             multiple of the bitdepth.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                </group>
                <group name="wall_contact_front" type="NXcs_filter_boolean_mask">
                    <doc>
                         A bitmask which identifies which of points have Voronoi cells that
                         are truncated by a specific wall of the axis-aligned bounding box.
                         The front wall has the negative y axis of the paraprobe coordinate
                         system as the outer unit normal.
                    </doc>
                    <field name="number_of_points" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Number of points covered by the mask.
                             The mask value for most may be 0.
                        </doc>
                    </field>
                    <field name="bitdepth" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Number of bits assumed matching on a default datatype.
                             (e.g. 8 bits for a C-style uint8).
                        </doc>
                    </field>
                    <field name="mask" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             The unsigned integer array representing the content of the mask.
                             If padding is used the padded bits are set to 0. The mask is for
                             convenience always as large as the entire dataset as it will
                             be stored compressed anyway. The convenience feature with this
                             is that then the mask can be decoded with numpy and mirrored
                             against the evaporation_id array and one immediately can filter
                             out all points that were used by the paraprobe.
                             The length of the array adds to the next unsigned integer
                             if the number of ions in the dataset is not an integer
                             multiple of the bitdepth.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                </group>
                <group name="wall_contact_rear" type="NXcs_filter_boolean_mask">
                    <doc>
                         A bitmask which identifies which of points have Voronoi cells that
                         are truncated by a specific wall of the axis-aligned bounding box.
                         The rear wall has the positive y axis of the paraprobe coordinate
                         system as the outer unit normal.
                    </doc>
                    <field name="number_of_points" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Number of points covered by the mask.
                             The mask value for most may be 0.
                        </doc>
                    </field>
                    <field name="bitdepth" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Number of bits assumed matching on a default datatype.
                             (e.g. 8 bits for a C-style uint8).
                        </doc>
                    </field>
                    <field name="mask" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             The unsigned integer array representing the content of the mask.
                             If padding is used the padded bits are set to 0. The mask is for
                             convenience always as large as the entire dataset as it will
                             be stored compressed anyway. The convenience feature with this
                             is that then the mask can be decoded with numpy and mirrored
                             against the evaporation_id array and one immediately can filter
                             out all points that were used by the paraprobe.
                             The length of the array adds to the next unsigned integer
                             if the number of ions in the dataset is not an integer
                             multiple of the bitdepth.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                </group>
                <group name="wall_contact_bottom" type="NXcs_filter_boolean_mask">
                    <doc>
                         A bitmask which identifies which of points have Voronoi cells that
                         are truncated by a specific wall of the axis-aligned bounding box.
                         The left wall has the negative z axis of the paraprobe coordinate
                         system as the outer unit normal.
                    </doc>
                    <field name="number_of_points" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Number of points covered by the mask.
                             The mask value for most may be 0.
                        </doc>
                    </field>
                    <field name="bitdepth" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Number of bits assumed matching on a default datatype.
                             (e.g. 8 bits for a C-style uint8).
                        </doc>
                    </field>
                    <field name="mask" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             The unsigned integer array representing the content of the mask.
                             If padding is used the padded bits are set to 0. The mask is for
                             convenience always as large as the entire dataset as it will
                             be stored compressed anyway. The convenience feature with this
                             is that then the mask can be decoded with numpy and mirrored
                             against the evaporation_id array and one immediately can filter
                             out all points that were used by the paraprobe.
                             The length of the array adds to the next unsigned integer
                             if the number of ions in the dataset is not an integer
                             multiple of the bitdepth.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                </group>
                <group name="wall_contact_top" type="NXcs_filter_boolean_mask">
                    <doc>
                         A bitmask which identifies which of points have Voronoi cells that
                         are truncated by a specific wall of the axis-aligned bounding box.
                         The left wall has the positive z axis of the paraprobe coordinate
                         system as the outer unit normal.
                    </doc>
                    <field name="number_of_points" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Number of points covered by the mask.
                             The mask value for most may be 0.
                        </doc>
                    </field>
                    <field name="bitdepth" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             Number of bits assumed matching on a default datatype.
                             (e.g. 8 bits for a C-style uint8).
                        </doc>
                    </field>
                    <field name="mask" type="NX_UINT" units="NX_UNITLESS">
                        <doc>
                             The unsigned integer array representing the content of the mask.
                             If padding is used the padded bits are set to 0. The mask is for
                             convenience always as large as the entire dataset as it will
                             be stored compressed anyway. The convenience feature with this
                             is that then the mask can be decoded with numpy and mirrored
                             against the evaporation_id array and one immediately can filter
                             out all points that were used by the paraprobe.
                             The length of the array adds to the next unsigned integer
                             if the number of ions in the dataset is not an integer
                             multiple of the bitdepth.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                </group>
                <group name="voronoi_cells" optional="true" type="NXcg_polyhedron_set">
                    <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS">
                        <enumeration>
                            <item value="3"/>
                        </enumeration>
                    </field>
                    <field name="cardinality" type="NX_POSINT" units="NX_UNITLESS"/>
                    <field name="volume" type="NX_NUMBER" units="NX_VOLUME">
                        <doc>
                             Interior volume
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                    <field name="process_identifier" optional="true" type="NX_POSINT" units="NX_UNITLESS">
                        <doc>
                             By which MPI process was the Voronoi cell computed.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                    <field name="thread_identifier" optional="true" type="NX_POSINT" units="NX_UNITLESS">
                        <doc>
                             By which OpenMP thread was the Voronoi cell computed.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                    <field name="number_of_faces" optional="true" type="NX_POSINT" units="NX_UNITLESS">
                        <doc>
                             The number of faces for each polyhedron. Faces of adjoining polyhedra
                             are counted for each polyhedron. This field can be used to interpret
                             the array/field with the individual area values for each face.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                    <field name="identifier_offset" type="NX_INT" units="NX_UNITLESS">
                        <doc>
                             Integer which specifies the first index to be used for distinguishing
                             polyhedra. Identifiers are defined either implicitly
                             or explicitly. For implicit indexing the identifiers are defined on the
                             interval [identifier_offset, identifier_offset+c-1].
                             For explicit indexing the identifier array has to be defined.
                        </doc>
                    </field>
                    <field name="identifier" optional="true" type="NX_INT" units="NX_UNITLESS">
                        <doc>
                             Integer used to distinguish polyhedra for explicit indexing.
                        </doc>
                        <dimensions rank="1">
                            <dim index="1" value="i"/>
                        </dimensions>
                    </field>
                    <group maxOccurs="1" minOccurs="0" name="polyhedra" type="NXcg_face_list_data_structure">
                        <doc>
                             A simple approach to describe the entire set of polyhedra when
                             the main intention is to store the shape of the polyhedra for
                             visualization.
                        </doc>
                        <field name="dimensionality" type="NX_POSINT" units="NX_UNITLESS"/>
                        <field name="number_of_vertices" type="NX_POSINT" units="NX_UNITLESS">
                            <doc>
                                 Number of vertices.
                            </doc>
                        </field>
                        <field name="number_of_faces" type="NX_POSINT" units="NX_UNITLESS">
                            <doc>
                                 Number of faces.
                            </doc>
                        </field>
                        <field name="vertex_identifier_offset" type="NX_INT" units="NX_UNITLESS"/>
                        <field name="face_identifier_offset" type="NX_INT" units="NX_UNITLESS"/>
                        <field name="vertices" type="NX_FLOAT" units="NX_LENGTH">
                            <dimensions rank="2">
                                <dim index="1" value="i"/>
                                <dim index="2" value="3"/>
                            </dimensions>
                        </field>
                        <field name="xdmf_topology" type="NX_UINT" units="NX_UNITLESS">
                            <doc>
                                 A sequence of always first an XDMF topology type key, followed
                                 by the XDMF number of vertices of the polygon, followed by
                                 the vertex identifier which define the facet polygon. First
                                 we store the polygon of the first facet of the first cell, then
                                 the second facet of the first cell, until the last facet of the
                                 first cell, followed by the first facet of the second cell,
                                 and so on and so forth.
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="j"/>
                            </dimensions>
                        </field>
                        <field name="xdmf_cell_identifier" type="NX_UINT" units="NX_UNITLESS">
                            <doc>
                                 A sequence of cell identifier so that each facet is associated
                                 with its cell because of which it is then possible to segment
                                 out cells three-dimensionally based on cell i.e. evaporation_id.
                            </doc>
                            <dimensions rank="1">
                                <dim index="1" value="n_f_xdmf"/>
                            </dimensions>
                        </field>
                    </group>
                </group>
            </group>
        </group>
        <group name="performance" recommended="true" type="NXcs_profiling">
            <field name="current_working_directory" type="NX_CHAR"/>
            <field name="command_line_call" optional="true" type="NX_CHAR"/>
            <field name="start_time" recommended="true" type="NX_DATE_TIME"/>
            <field name="end_time" recommended="true" type="NX_DATE_TIME"/>
            <field name="total_elapsed_time" type="NX_NUMBER"/>
            <field name="number_of_processes" type="NX_POSINT"/>
            <field name="number_of_threads" type="NX_POSINT"/>
            <field name="number_of_gpus" type="NX_POSINT"/>
            <group recommended="true" type="NXcs_computer">
                <field name="name" recommended="true" type="NX_CHAR"/>
                <field name="operating_system" type="NX_CHAR">
                    <attribute name="version" type="NX_CHAR"/>
                </field>
                <field name="uuid" optional="true" type="NX_CHAR"/>
                <group maxOccurs="unbounded" minOccurs="0" type="NXcs_cpu">
                    <field name="name" optional="true" type="NX_CHAR"/>
                    <group recommended="true" type="NXfabrication">
                        <field name="identifier" optional="true" type="NX_CHAR"/>
                        <field name="capabilities" optional="true" type="NX_CHAR"/>
                    </group>
                </group>
                <group maxOccurs="unbounded" minOccurs="0" type="NXcs_gpu">
                    <field name="name" optional="true" type="NX_CHAR"/>
                    <group recommended="true" type="NXfabrication">
                        <field name="identifier" optional="true" type="NX_CHAR"/>
                        <field name="capabilities" optional="true" type="NX_CHAR"/>
                    </group>
                </group>
                <group maxOccurs="1" minOccurs="0" type="NXcs_mm_sys">
                    <field name="total_physical_memory" type="NX_NUMBER"/>
                </group>
                <group maxOccurs="1" minOccurs="0" type="NXcs_io_sys">
                    <group maxOccurs="unbounded" minOccurs="1" type="NXcs_io_obj">
                        <field name="technology" type="NX_CHAR"/>
                        <field name="max_physical_capacity" type="NX_NUMBER"/>
                        <field name="name" optional="true" type="NX_CHAR"/>
                        <group recommended="true" type="NXfabrication">
                            <field name="identifier" optional="true" type="NX_CHAR"/>
                            <field name="capabilities" optional="true" type="NX_CHAR"/>
                        </group>
                    </group>
                </group>
                <group type="NXcs_profiling_event">
                    <field name="start_time" optional="true" type="NX_DATE_TIME"/>
                    <field name="end_time" optional="true" type="NX_DATE_TIME"/>
                    <field name="description" type="NX_CHAR"/>
                    <field name="elapsed_time" type="NX_NUMBER"/>
                    <field name="number_of_processes" type="NX_POSINT">
                        <doc>
                             Specify if it was different from the number_of_processes
                             in the NXcs_profiling super class.
                        </doc>
                    </field>
                    <field name="number_of_threads" type="NX_POSINT">
                        <doc>
                             Specify if it was different from the number_of_threads
                             in the NXcs_profiling super class.
                        </doc>
                    </field>
                    <field name="number_of_gpus" type="NX_POSINT">
                        <doc>
                             Specify if it was different from the number_of_threads
                             in the NXcs_profiling super class.
                        </doc>
                    </field>
                    <field name="max_virtual_memory_snapshot" recommended="true" type="NX_NUMBER"/>
                    <field name="max_resident_memory_snapshot" recommended="true" type="NX_NUMBER"/>
                </group>
            </group>
        </group>
    </group>
</definition>
