doc: | 
  Application definition for temperature-dependent IV curve measurements
  #2023.19.7 This Nexus file is currently only for STS data, it will be updated to handle the 
  STM image mode in the future with a focus on bias spectroscopy in scanning tunneling microscopy.
  
  In this application definition, times should be specified always together with an UTC offset.
 
  This is the application definition describing temperature (T) dependent current voltage (IV) curve
  measurements. For this a temperature is set. After reaching the temperature, a voltage sweep
  is performed. For each voltage a current is measured.
  Then, the next desired temperature is set and an IV measurement is performed.
    #The X, Y, Z, position of the probes or tip can be defined. 
    #The data can be visualized in a tensor with:  
    I (NXsensor_C, NXsoftware_Read_offset, NXcircuit)
    parameters: 
    V has (NXsource+offset, NXsoftware_Scan_offset, NXsensor_V, NXcircuit)  
    T has (NXsource, NXsoftware_Scan_offset, NXsensor_T)
    x has (NXsoftware_Scan_offset)
    y has (NXsoftware_Scan_offset)
    z has (NXsoftware_Scan_offset)
category: application
NXiv_sweep2(NXsensor_scan):
  (NXentry):
    exists: optional
    definition:
      enumeration: [NXiv_sweep2]
    type:
      # NOTE_: What does the enum refer, scan could be forward or backward. (not in data file)
      # What is about [constant current mode, constand height mode]
      enumeration: [background, reference, sample]
      doc: |
        The equipments and techniques as well as the parameter settings and reference signals 
        are used during the experiments used in Scanning Tunneling Microscopy (STM).
    entry_identifier:
      exists: optional
      doc: |
        The name of the output file, with the number of scans at the end. (e.g. 221122_Au_5K00014)
    collection_identifier:
      doc: The name of the series output file, which represents only the public part of the output file. (e.g. 221122_Au_5K)
    experiment_identifier:
      exists: optional
      doc: |
        Path to storage of output files. 
        (e.g. Path C:\Users\SPM-PEEM\Desktop\DATA_Nanonis\20220711_CreaTec_Service_Benchmarks_LHe\Nanonis-Session-PMD100-HVHU_CreaTec_Service_PalmaLabBerlin220711)
    experiment_description:
      exists: optional
      doc: |
        Descriptive comments for this experiment, added by the experimenter, coming from the 
        output file. (e.g. Comment01 SYNC & Filter LP 8order WITHDRAW 600 steps, locked Au(111), 
        50pA, 100 mV set point, 1mV DCA, 973Hz,138 1st H, -84 2nd H)
    (NXinstrument):
      hardware(NXfabrication):
        exists: optional
        doc: Hardware type used in SPM experiment, includes hardware manufacturers and type. (e.g. Nanonis BP5e)
      # any or specifique 'harware' and 'software'?
      software(NXfabrication):
        exists: optional
        doc: | 
          Type of software used in SPM experiments, such as software version serial number, UI and
          RT probe release method. (e.g. SW Version Generic 5e -- RT Release 10771)
                  # hardware: Current amplifier> hardware: CreaTec GmbH
        version:
          exists: required
          doc: |
            Version of the software.  
      # amplification: Current amplifier> factor (V/V): 1E-10
      # crosstalk_compensation: Current amplifier> Capacitive cross-talk compensation: Yes/No
      current_amplifier(NXamplifier):
        exists: optional
        doc: |
          The Amplifier description that improves or helps to determine tunnel current (current 
          between tip and bias).
      lock_in(NXlockin):
        status:
          # status: Lock-in>Lock-in status ON # ON/OFF of Lock-in amplifier
          doc: |
            Status of Lock-in device whether while performing the experiment
        # amplifier_status: -> amplifier/active_channels
          # Lock-in Amplifier>Yes/No
        #  doc:  Lock-in Amplifier>Yes/No # If a lock-in amplifier employed to filter or obtain 
        #        the electronic derivatives dI/dV of the signal
        # hardware:     Lock-in Amplifier>Hardware: Nanonis
        modulation_signal:
          exists: optional
          doc: |
            This is the signal on which the modulation (sine) will be added.
          unit: NX_VOLTAGE
        # modulate_signal: Lock-in>Modulated signal Bias (V)
        modulation_frequency(NX_NUMBER): 
        # Lock-in>Frequency (Hz) 973E+0 
          doc: |
            The signal is modulated by adding the frequency of the sine modulation. The 
            modulation frequency spans can be from 10 mHz to 40 kHz, corresponding to the output filter 
            cut-off range. When dealing with harmonics, it's essential to ensure that the 
            harmonic frequencies remain below ~100 kHz, which aligns with the input filter cut-off. 
            Be mindful that hardware filters might impact the amplitude as the signal approaches 
            their cut-off frequencies." (e.g. 973E+0)
          unit: NX_FREQUENCY
        modulation_amplitude(NX_NUMBER):
        # amplitude: Lock-in>Amplitude 2E-3 
          doc: |
            The amplitude (in physical units of modulated signal) of the sine modulation.
        demodulated_signal: 
          exists: optional
        #Lock-in>Demodulated signal Current (A) # This is the signal which
        # will be demodulated, in order to determine the amplitude and phase at the frequency 
        # set in the Frequency field (“4”) or harmonics.
          doc: |
            The input signal (STS signal) will be demodulated, in order to determine the amplitude 
            and phase at the frequency set in the Frequency field or harmonics, such as current, 
            bias, et.al.
        
        harmonic_order_N(NX_NUMBER):
          #   Lock-in>Harmonic D1 1 
          #   Lock-in>Harmonic D2 2 # See below.
          doc: |
            N denotes 1 or 2. The order of the harmonic oscillation to be detected in the demodulated
            signal should be considered relative to the modulation frequency. When dealing with 
            higher harmonics, it's essential to ensure that their frequencies do not surpass
            the analogue signal bandwidth (e.g. harmonic_order_1).
        ref_phase_N(NX_NUMBER):
        #   Lock-in>Reference phase D1 (deg) 137.597E+0 
        #   Lock-in>Reference phase D2 (deg) -83.6562E+0 # See below.
          doc: |
            Reference phase for the sine on the demodulated signal with respect to the
            modulation signal. The determined phase is displayed with respect to the
            reference phase.
        lock_in_data_flip_number(NX_NUMBER):

        # items below should go to bias/spectroscopy/...!!!
        # recorded_channels:
        #  doc: Select the channels to record. (e.g. Current (A);LI Demod 2 X (A);LI Demod 2 Y (A);
        #     LI Demod 1 X (A);LI Demod 1 Y (A) # Select the channels to record.)
        # bias_reset:
        #  doc: When selected, the Bias voltage returns to the initial value (before starting the 
        #     sweep) at the end of the spectroscopy measurement (default). When not selected, Bias
        #     remains at the last value of the sweep. This is useful e.g. when combining several 
        #     sweep segments. Example for an automated measurement (using Programming Interface): 
        #     switch off Z-Controller, start spectroscopy sweep segments (only fwd sweep, no reset
        #     bias), set bias back to initial value, switch on Z-Controller.  (e.g. TRUE)
        # record_final_z:
        #  doc: Select whether to record the Z position during Z averaging time at the end of the
        #     sweep (after Z control time) and store the average value in the header of the file
        #     when saving. Using this option increases the sweep time by Z averaging time. (e.g. FALSE)
        # run:
        #  doc: Bias Spectroscopy>Lock-In run FALSE # Select whether to set the Lock-In to run 
        #     during the measurement. When using this feature, make sure the Lock-In is configured
        #     correctly and settling times are set to twice the Lock-In period at least. This 
        #     option is ignored when Lock-In is already running. This option is disabled if the 
        #     Sweep Mode is MLS and the flag to configure the Lock-In per segment in the Multiline 
        #     segment editor is set.
      sample_bias(NXiv_bias):
        bias(NX_NUMBER):
          unit: NX_VOLTAGE
          doc: Applied a voltage between tip and sample.
        bias_calibration(NX_NUMBER):
        bias_offset(NX_NUMBER):
          unit: NX_VOLTAGE
        # sample_bias(NXbias):
        # Tip bias/Sample bias If the spectroscopy V bias is applied to the
        # Modulated signal Bias (V) 1E-3 Applied modulation to the bias voltage.
        # ModulationBias> Tip bias/Sample bias
        # modulated_signal_bias(NX_NUMBER):
        # unit: NX_VOLTAGE
        # doc: Same directional representation as bias. (e.g. 1E-3)
      stm_head_temp(NX_NUMBER):
        exists: optional
        unit: NX_TEMPERATURE
        doc: |
          Temperature of STM head. Note: At least one field from stm_head_temperature,
          cryo_bottom_temp and cryo_sheild_temp must be provided.
      cryo_bottom_temp(NX_NUMBER):
        exists: optional
        unit: NX_TEMPERATURE
        doc: |
          Temperature of liquid helium cryostat. Note: At least one field from 
          stm_head_temperature, cryo_bottom_temp and cryo_sheild_temp must be provided.
      cryo_shield_temp(NX_NUMBER):
        exists: optional
        unit: NX_TEMPERATURE
        doc: | 
          Temperature of liquid nitrogen shield. Temperature 3 (K) (e.g 78.00000E+0). Note: At 
          least one field from stm_head_temperature, cryo_bottom_temp and cryo_sheild_temp
          must be provided.
      output_cabling(NXcircuit):
        exists: optional
        doc: | 
          Note_ no doc.

        # Cabling & Config
        # output_mode:
        # doc: Number of output channels. (e.g. User Output)
        # output_value(NX_NUMBER):
        # doc: The user output in each monitor mode. (e.g. 0E+0)
        # output_name:
        # doc: User outputs whose name can be modified in the corresponding module. (e.g. Input 24 (V))
        # output_slew_rate(NX_NUMBER):
        # doc: The rate at which the one of the signal changes when ramping to the starting point. (V/s) (e.g. Inf)
      piezo_config(NXcollection):
        doc: |
          Configuration for piezoelectric scanner used to move tip along X and Y direction. The 
          material of the Piezoelectric scanner composed of polycrystalline solids and sensitive to 
          applied voltage.
        active_calib:
          doc: The name of calibration type. (e.g. LHe)
        calib_N(NX_NUMBER):
          exists: optional
          doc: |
            N denotes X or Y or Z. There are three parameters in the X, Y, and Z directions, 
            along with three available controls: Calibration (m/V), Range (m), and HV gain. Only 
            two of these parameters are required to define the calibration. Consequently, when any 
            value is changed, one of the other values will be automatically updated. (e.g. calib_X = 3.8E-9)
        hv_gain_N(NX_NUMBER):
          exists: optional
          doc: N denotes X or Y or Z. In some systems, there is an HV gain readout feature. 
            For these systems, the HV gain should be automatically adjusted whenever 
            the gain is changed at the high voltage amplifier. (e.g. 14.5)
        # (e.g. 0.318343)
        tilt_N(NX_NUMBER):
          exists: optional
          unit: NX_ANGLE
          doc: |
            N denotes X or Y. There are 2 parameters in X and Y directions, and tilt needs to be 
            adjusted according to the actual surface. (in degrees, first order correction).
        # Inf
        curvature_radius_N(NX_NUMBER):
          exists: optional
          unit: NX_LENGTH
          doc: N denotes X or Y. There are 2 parameters in X and Y directions.
               (can be set approximately to the length of the piezotube).
        2nd_order_corr_N(NX_NUMBER):
          exists: optional
          doc: |
            N denotes X or Y. There are 2 parameters in X and Y directions. If you know them, 
            you can enter the 2nd order piezo characteristics to compensate for it. The 
            following equation shows the interpretation of the 2nd order correction parameter: 
            For the X-piezo: "Ux = 1/cx · X + cxx · X2" with units: 
            [V] = [V/m] · [m] + [V/m2] · [m2] where cx is the calibration of the piezo X and cxx
            is the 2nd order correction. (V/m^2). (e.g. 0E+0)
        drift_N(NX_NUMBER):
          exists: optional
          doc: |
            N denotes X, Y or Z. There are 3 parameters in X, Y and Z directions. Define the 
            drift speed for all three axes. When the compensation is on, the piezos will start to
            move at that speed. (e.g. 0E+0)
        drift_correction_status(NX_BOOLEAN):
          doc: Use the button to enable or disable the drift compensation. (e.g. FALSE)
      (NXenvironment):
        doc: |
          Describes an environment setup for a temperature-dependent IV measurement experiment.
          The temperature and voltage must be present as independently scanned controllers and
          the current sensor must also be present with its readings.
        exists: required
        current_sensor(NXsensor):
          current(NX_NUMBER):
            doc: |
              This is set-point of tip current (in the constant current mode should be equal to set-point, 
              in the constant height mode means the real tunnelling current between tip and sample).
            unit: NX_CURRENT
          current_calibration(NX_NUMBER):
            doc: |
              Value of calibration that comes as A/V.
            unit: NX_CURRENT
          current_offset(NX_NUMBER):
            unit: NX_CURRENT
          current_gain:
            unit: NX_UNITLESS
          calibration_time(NX_DATE_TIME):
            exists: optional
          value(NX_NUMBER):
            exists: optional
        position(NXpositioner):
          doc: Clarify the frame laboratory frame.
          x(NX_NUMBER):
            exists: optional
            unit: NX_LENGTH
            doc: The scanning area in x position in the frame. (e.g. -890.53E-12)
          y(NX_NUMBER):
            exists: optional
            unit: NX_LENGTH
            doc: The scanning area in y position in the frame. (e.g. 29.6968E-9)
          z(NX_NUMBER):
            exists: optional
            unit: NX_LENGTH
            doc: The scanning area in z position in the frame. (e.g. 130.5E-9)
          z_controller(NXcollection):
            z(NX_NUMBER):
              unit: NX_LENGTH
              doc: |
               Indicate the relative tip position z between tip and sample. The tip position can also 
               be varied when the z_controller is not running. (e.g. 130.5E-9)
        # TODO: Is if this are uncomment than getting error.
        # voltage_controller(NXsensor):
        # temperature_controller(NXsensor):        
        # parameters for a measurement at a single location during the scan
        sweep_control(NXcollection): 
          bias_spectroscopy(NXbias_spectroscopy):
            integration_time(NX_NUMBER):
              unit: NX_TIME
              doc:  Time during which the spectroscopy data are acquired and averaged. (e.g. 150E-6)
            number_of_sweeps(NX_NUMBER):
              doc: Number of sweeps to measure and average. (e.g. 100)
            sweep_start(NX_NUMBER):
              unit: NX_VOLTAGE
              doc: The start bias values of the sweep. (e.g. -300E-3)
            sweep_end(NX_NUMBER):
              unit: NX_VOLTAGE
              doc: The end bias values of the sweep. (e.g. 300E-3)
            num_pixel(NX_NUMBER):
              doc: The sweep number of points is defined as the maximum spectrum resolution, which 
                   is equal to the bias sweep window divided by the number of pixels. (e.g. 4096)
            z_avg_time(NX_NUMBER):
              unit: NX_TIME
              doc: |
                The Z position is recorded and averaged for a certain duration both before and 
                after the sweep. After the initial Z averaging time, if "Z-Controller to Hold" 
                is selected, the Z-Controller is set to hold mode, and the tip is positioned at
                the previously averaged Z position (adjusted by the Z offset). (e.g. 100E-3)
          circuit(NXcollection):
            rt_frequency(NX_NUMBER):
              unit: NX_FREQUENCY
              doc: |
                The bandwidth of the Hardware and/or Software is instrument specific. 
                For example, Nanonis Generic 5 has 'RT Frequency' (e.g. 20E+3).
            signals_oversampling(NX_NUMBER):
              doc: |
                The Signals Period represents the rate at which signals are transferred to 
                the host computer, which operates the control software. This rate may 
                be 10 times lower than the sampling rate, as the real-time engine internally 
                oversamples the signal. If desired, you may have the option to reduce the oversampling
                to 1, enabling higher frequency resolution in the Spectrum Analyzer. (e.g. 10)
            acquisition_period(NX_NUMBER):
              unit: NX_TIME
              exists: optional
              doc:  The update rate is utilized in various processes, including the History 
                Graph, Auto-Approach, and multiple Programming Interface functions.  
                It may be configured to a 20 ms interval. Any additional timings must strictly 
                be integer multiples of this base value. While it is possible to set 
                these additional timings to different values, the actual timing value will 
                automatically be adjusted to become a multiple of the Acquisition Period. (e.g. 20E-3)
            animations_period(NX_NUMBER):
              unit: NX_TIME
              exists: optional
              doc: The update rate of animated graphical indicators, such as graphs and sliders, 
                can be adjusted. A normal value may be 40 ms, which corresponds to 25 updates 
                per second. Increasing this period can help reduce the processor load on the 
                graphical user interface, particularly on slower computers. It is important to note
                that this update rate solely impacts the user interface and does not affect 
                measurements in any manner. (e.g. 20E-3)
            indicators_period(NX_NUMBER):
              unit: NX_TIME
              doc: The update rate of digital indicators, such as the numbers displayed, can 
                be set to 3 updates per second, equivalent to 300 ms. This interval
                is sufficient for the user interface and does not impact measurements in any 
                manner. (e.g. 300E-3)
            measurements_period(NX_NUMBER):
              exists: optional
              unit: NX_TIME
              doc: The Measurements period determines the integration time required for precise measurements,
                primarily utilized in sweep modules. It is particularly useful for tasks such as recording 
                force-distance curves or cantilever resonances. For swift measurements with small steps, a value 
                of 40 ms is often adequate. For regular use, a range of 300-500 ms may be recommended, but when 
                capturing the resonance of a high-Q cantilever, longer values in the range of several seconds 
                might be necessary. Usually, this parameter does not require manual adjustment within this module, 
                as the sweep modules automatically set this value according to the sweep timings. (e.g. 500E-3)
        # parameters how to change the location from measurement to measurement during the scan
        scan_control(NXcollection):
          exists: optional
          roi(NXtransformations):
            frame:
              doc: |
                Also clarify the frame for the ROI of the scan in lab frame, the middle of the lab 
                frame is (0, 0), and positive in x means right and in y means up.
          circuit(NXcollection):
            channels_current:
              doc: The scan channels are selected by users. 
                (e.g. (A);Bias (V);Z (m);LI Demod 2 X (A);LI Demod 2 Y (A);LI Demod 1 X (A);LI Demod 1 Y (A))
          positioner(NXcollection):
            scanfield(NX_NUMBER):
              doc: Configure the scan frame like x position; y position; width; height. (e.g. 3.11737E-9;29.1583E-9;15E-9;15E-9;0E+0)
            pixels_line(NX_NUMBER):
              doc: Scan resolution by setting the Lines equal to Pixels.  (e.g. 512)
            lines(NX_NUMBER):
              doc: Define the image resolution. (e.g. 512)
            speed_forw(NX_NUMBER):
              doc: Define the scan forward speed in the forward direction. (m/s) (e.g. 11.7187E-9)
            speed_backw(NX_NUMBER):
              doc: Define the scan backward speed in the forward direction. (m/s) (e.g. 11.7187E-9)
    # RESOLUTION (calculation input)
    # TODO: After fix resolution_indicators back to required
    # As all of the bellow are linked
    # should be NXcollection not NXprocess
    resolution_indicators(NXprocess):
      exists: optional
      # Temperature 1>link to INSTR/STM/head Temperature 1 (K) (e.g. 4.92997E+0) # Temperature of STM head.
      temp_stm_head(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/stm_head_temp
      # Temperature 2>link to Temperature 2 (K) - # Temperature of bottom of LHe helium cryostat.
      temp_cryo_bottom(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/temp_cryo_bottom
       # Temperature 3>link to Temperature 3 (K) - # Temperature of LN2 nitrogen shield.
      temp_cryo_shield(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/temp_cryo_shield
      # Lock-in>link to Modulated signal Bias (V) (e.g. 1E-3) # Applied modulation to the bias voltage.
      modulated_signal_bias(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/lock_in/modulation_signal
      # link to Integration time (s) (e.g. 150E-6) 
      # Time during which the spectroscopy data are acquired and averaged. 
      integration_time(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/bias_spectroscopy/integration_time
      # link to Bias Spectroscopy>Number of sweeps (e.g. 100) 
      # Number of sweeps to measure and average.
      number_of_sweps(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/bias_spectroscopy/number_of_sweeps
      # link to Bias Spectroscopy>Sweep Start (V) (e.g. -300E-3) # The first bias values of the sweep. 
      sweep_start(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/bias_spectroscopy/sweep_start
      # link to Bias Spectroscopy>Sweep End (V) (e.g. 300E-3) # The last bias values of the sweep. 
      sweep_end(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/bias_spectroscopy/sweep_end
      # link to Bias Spectroscopy>Num Pixel (e.g. 4096) # Define the sweep number of points, that is, the maximum spectrum resolution eq. Bias window divide by Num Pixel.
      num_pixel(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/bias_spectroscopy/num_pixel
      # link to Bias Spectroscopy>Z Avg time (s) (e.g. 100E-3) # Duration over which the Z 
      # position is recorded and averaged before and after the sweep (the latter only if Record
      # final Z position is selected in the Advanced section). After the initial Z averaging 
      # time, if Z-Controller to Hold is selected in the Advanced section, the Z-Controller is
      # set to hold and the tip is placed at the previously averaged Z position (plus Z offset).
      z_avg_time(link):
        target: None
      # link to SoftwareMain>RT Frequency (Hz) (e.g. 20E+3) # The bandwitdh of the 
      # Hardware and/or Software
      rt_freq(link):     
        target: None
      # link to SoftwareMain>Signals Oversampling (e.g. 10) # (Signals Periods) 
      # The Signals Period is the rate at which the signals are transferred to the host computer
      # running the control software. This is usually lower by a factor of 10 than the sampling 
      # rate, because an internal oversampling of the signal is done on the real time engine. 
      # You can reduce the oversampling down to 1 in order to resolve higher frequencies in the 
      # Spectrum Analyzer.
      oversampling(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/circuit/signals_oversampling
      # link to SoftwareMain>Acquisition Period (s) (e.g. 20E-3) # Update rate for several 
      # processes like History Graph, Auto-Approach, and for many Programming Interface functions.
      # This is usually set to 20 ms. All additional timings (7-9) can only be integer multiples 
      # of this value. They can be set to different values, but the actual timing value will be
      # coerced to a multiple of the Acquisition Period.
      acquisition_period(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/circuit/acquisition_period 
      # link to SoftwareMain>Animations Period (s) (e.g. 20E-3) # Update rate of animated 
      # graphical indicators. These are e.g. some graphs & sliders. A reasonable value is 
      # 40 ms (25 updates per second). Increase this period to reduce the processor load 
      # for the graphical user interface, especially on slow computers. This value is purely a 
      # user interface update rate and does not affect measurements in any way.
      animation_period(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/circuit/animations_period
      # link to SoftwareMain>Indicators Period (s) (e.g. 300E-3) # Update rate of digital 
      # indicators, e.g. the numbers displayed besides each slider. Here, 3 updates per 
      # second, or 300 ms is enough. This value is purely a user interface update rate and
      # does not affect measurements in any way.
      indicators_period(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/circuit/indicators_period
      # link to SoftwareMain>Measurements Period (s) (e.g. 500E-3) # The Measurements 
      # period is the integration time for precise measurements (averaging over specified period),
      # mostly used in sweep modules. Examples are recording of a force-distance curve or a 
      # resonance of a cantilever. For fast measurements with small steps, a value of 40 ms may be
      # reasonable. For normal use, 300-500 ms is a good value, but for recording a resonance of a
      # high-Q cantilever, values of several seconds might be necessary. Usually this parameter doesn’t need to be set from this module; the sweep modules will set this value according to the sweep timings.
      measurement_period(link): 
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/circuit/measurements_period
    # TODO: Later fix REPRODUCIBILITY_indicator
    # as all of the bellow are linked
    reproducibility_indicators(NXprocess):
      exists: optional
      # Bias>Bias(NXBias) (V) (e.g. 100E-3) # Applied bias voltage.
      bias(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/sample_bias/bias
      # Current>Current(NXcircuit) (A) (e.g. -5.3429E-15) # The tunneling current is displayed here.
      current(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/current_sensor/current
      # Bias>Calibration(NXbias) (V/V) (e.g. 1E+0) Calibration of the Bias output. If you have
      # a Range switch the calibration is stored per range setting.
      bias_calibration(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/sample_bias/calibration
      # Bias>Offset(NXbias) (V) (e.g. 0E+0) Allows compensating for an offset in Bias.
      bias_offset(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/sample_bias/offset
      # Current>Calibration(NXcircuit) (A/V) (e.g. 100E-12) 
      # The signals voltages are converted to real world physical values according to the calibration & offset parameters: 
      # Physical signal = (Voltage * calibration) + offset. 
      current_calibration(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/current_sensor/current_calibration
      # Current>Offset(NXcircuit) (A) (e.g. 16.2897E-15) # The same as "Current>Calibration (A/V)" tag 
      current_offset(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/current_sensor/current_offset
      # Current>Gain(NXcircuit) (e.g. Not switchable) # None 
      current_gain(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/current_sensor/current_gain 
      # Z offset(NXpositioner) (m) (e.g. 0E+0) # Offset added to the initial averaged position 
      # Zaver before starting to sweep. This parameter is disabled when Z-Controller to Hold is
      # deselected in the Advanced section. The LED “Alt” next to the Z offset indicates if an
      # alternate Z-controller setpoint is enabled.
      z_offset(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/bias_spectroscopy/z_offset 
      # Settling time(NXbias) (s) (e.g. 2.1E-3) Time to wait after changing the bias to the next
      # level and before starting to acquire data. Adjust this parameter to avoid transient 
      # effect induced by the bias change. Integration time: time during which the data are 
      # acquired and averaged.
      settling_time(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/bias_spectroscopy/settling_time
      # Z-Ctrl hold(NXpositioner) (e.g. TRUE) # When selected, the Z-Controller is set to hold 
      # during the pulse. This means that the controller doesn't control the Z position during the pulse.
      z_control_hold(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/bias_spectroscopy/z_ccontroller_hold
      # Final Z(NXpositioner) (m) (e.g. N/A)
      final_z(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/bias_spectroscopy/record_final_z
      # Start time(NXlog) (e.g.23.11.2022 18:55:16) # Timestamp of the moment
      # when the acquisition starts by pressing the Start button.
      # TODO: no available concept is found for the  below link 
      # start_time(link):
      #   exists: optional
      #   target: none
      # Bias Spectroscopy>1st Settling time(NXbias) (s) (e.g.2.1E-3) # See the "Settling time (s)" below.        
      1st_settling_time(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/bias_spectroscopy/first_settling_time
      # Bias Spectroscopy>Integration time(NXbias) (s) (e.g.150E-6) # Time during which the data
      # are acquired and averaged. 
      # integration_time(link):
      #  target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/bias_spectroscopy/integration_time
      # Bias Spectroscopy>End Settling time(NXbias) (s) (e.g.4E-3) # Time to wait after the sweep has finished and the bias is ramped to the initial value.
      end_settling_time(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/bias_spectroscopy/end_settling_time
      # Bias Spectroscopy>Z control time(NXbias) (s) (e.g.200E-3) # Time during which the 
      # Z-Controller is enabled once a sweep has finished. When averaging multiple sweeps
      # (i.e. Sweeps>1), the Z-Controller is enabled for this duration between each sweep.
      # After the last sweep, it will wait the specified time before continuing a running scan.
      # This ensures each sweep reliably starts from the same position. This parameter is 
      # disabled when Z-Controller to Hold is deselected in the Advanced section.
      z_control_time(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/bias_spectroscopy/z_control_time
      # Bias Spectroscopy>Max Slew rate(NXbias) (V/s) (e.g.1E+0) # Maximum rate at which
      # the bias changes (before, during and after sweeping).
      max_slew_rate(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/bias_spectroscopy/max_slew_rate
      # Bias Spectroscopy>backward sweep(NXbias) (e.g.TRUE) # Select whether to measure
      # the backward (return) sweep or the forward only.
      backward_sweep(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/sweep_control/bias_spectroscopy/backward_sweep
      # Z-Controller>Controller name(NXpositioner) (e.g.log Current) # Controller name.
      # This name which will be displayed at places where you can select a controller.
      z_control_name(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/position/z_controller/controller_name
      # Z-Controller>Controller status(NXpositioner) (e.g.OFF) # ON/OFF
      z_control_status(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/position/z_controller/controller_status
      # Z-Controller>Setpoint(NXpositioner) (e.g.50E-12) # Set Point is the desired value
      # of the control signal. It can be set by editing the number or using the slider bar. 
      # Click the "Set" button above the input field to use the actual value as Set Point. The slider shows the Set Point as well as the current value.
      # Z-Controller>Setpoint unit(NXpositioner) (e.g.A) # Angstrom
      z_control_setpoint(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/position/z_controller/set_point
      # Z-Controller>P gain(NXpid) (e.g.6E-12) # The Type switches controller parameters
      # between P/I (proportional gain/integral gain) and P/T (proportional gain/time constant).
      # The formula for the controller in the frequency domain is: G(s) = P + I/s = P(1 + 1/(Ts)).
      # The integral gain and time constant are related as follows: I = P/T. 
      z_control_p_gain(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/position/z_controller/p_gain
      # Z-Controller>I gain(NXpid) (e.g.39.8241E-9) # See "Z-Controller>P gain" below. 
      z_control_i_gain(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/position/z_controller/i_gain
      # Z-Controller>Time const(NXpid) (s) (e.g.150.662E-6) # See "Z-Controller>P gain" below.
      z_control_time_const(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/position/z_controller/time_const
      # Z-Controller>TipLift(NXpositioner) (m) (e.g.0E+0) # Lifts the tip by the specified
      # amount when then controller is switched off. This can be a positive or a negative number,
      # i.e. the tip can also be moved towards the sample. Be careful with sign and value when
      # using this feature.
      z_control_tip_lift(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/position/z_controller/tip_lift
      # Z-Controller>Switch off delay(NXpositioner) (s) (e.g.0E+0) # Use this parameter for 
      # a reproducible position when switching off the Z-controller. When >0 and the Z-controller
      # is switched off, it doesn't switch off immediately but continues to run for the specified time and averages the Z position.
      z_control_switchoff_delay(link):
        target: /ENTRY[entry]/INSTRUMENT[instrument]/ENVIRONMENT[environment]/position/z_controller/switchoff_delay
    sample(NXsample):
      exists: optional
      doc:
        To describe sample and other constaints that applied on sample before scanning.
      sample_prep_descripton:
        doc: |
          At this moment no base class available that can track entire sample preparation.
    # TODO: discuss convertion data to DATA
    (NXdata):
      doc: |
        This NXdata should contain separate fields for the current values at different temperature setpoints, for example current_at_100C.
        There should also be two more fields called temperature and voltage containing the setpoint values.
        There should also be a field with an array of rank equal to the number of different temperature setpoints and each child's dimension
        equal to the number of voltage setpoints.
        axes: bias_calc
        signals:
          li_demod_[1;2]_[X/Y]_[-;bwd;filt;bwd_filt]
          current_[-;bwd;filt;bwd_filt]
          temperature
          x
          y
          z
      # DATA # multi dimensional array: multi I-V array per scan point;
      # doc: The format of the data here is similar to a column matrix.
      # Bias calc (V) #scanning parameter
      # Current (A) # current during forward direction scanning of bias - original NXsensor
      # LI Demod 2 X (A) lockin (NXsensor+lockin)
      # LI Demod 2 Y (A) lockin
      # LI Demod 1 X (A) lockin
      # LI Demod 1 Y (A) lockin
      # Current [bwd] (A) #bwd - backward (the positive direction shall be clarified by the reference bias scanning frame. Fwd means from left(neg) to right(pos). In the scannig image, the bottom(neg) to top(pos), the left(neg) to right(pos)
      # LI Demod 2 X [bwd] (A) lockin
      # LI Demod 2 Y [bwd] (A) lockin
      # LI Demod 1 X [bwd] (A) lockin
      # LI Demod 1 Y [bwd] (A) lockin
      # Current (A) [filt] # forward direction (maybe from lockin#2?)
      # LI Demod 2 X (A) [filt] lockin
      # LI Demod 2 Y (A) [filt] lockin
      # LI Demod 1 X (A) [filt] lockin
      # LI Demod 1 Y (A) [filt] lockin
      # Current (A) [bwd] [filt]
      # LI Demod 2 X (A) [bwd] [filt] lockin
      # LI Demod 2 Y (A) [bwd] [filt] lockin
      # LI Demod 1 X (A) [bwd] [filt] lockin
      # LI Demod 1 Y (A) [bwd] [filt] lockin
      # Temperature
      # x
      # y
      # z
      # single point default plot # current(I) vs bias(V)
      single_point(NXdata):
        exists: optional
      # line scan default plot # multi I vs. V curves
      line_scan(NXdata): 
        exists: optional
      # alternative plot # current(I) curve in the 2D space of (position(x), bias(V))
      alternative_plot(NXdata):
        exists: optional
      # mesh scan default plot # 2D slices of the above alternative plot
      mesh_scan(NXdata):
        exists: optional
